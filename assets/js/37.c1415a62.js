(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{238:function(t,n,e){"use strict";e.r(n);var s=e(0),a=Object(s.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("this总是指向函数的直接调用者（而非间接调用者）；如果有new关键字，this指向new出来的那个对象；在事件中，this指向触发这个事件的对象，特殊的是，IE中的attachEvent中的this总是指向全局对象Window；\n通俗的讲，因为ｔｈｉｓ只存在于函数中，而函数是需要被调用的，然后ｔｈｉｓ是谁（对象）调用函数就指向谁（对象）。下面我们看看不同情况下的ｔｈｉｓ指向情况。")]),t._v(" "),e("p",[t._v("１）单纯的函数调用")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("function test(){ \n    this.x = 1; \n    alert(this.x)／／结果为：１\n };\ntest();／／这里window调用了test函数， window.x即this.x\nalert(this.x) ;／／结果为：１\nalert('x' in window);／／结果为：true\n``\n\n２）函数作为对象的方法调用\n")])])]),e("p",[t._v("var test = {\na:1,\nb:function(){\nalert(this.a);\n}\n};\ntest.b();／／结果为：1　test调用了函数b，this指向test\nalert(this.a);//结果为：undefined　 window调用了alert函数，this指向 window而window里并没有a这个属性。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("注：在非严格模式下，this没有正确指向，则指向window对象，在严格模式下，没有正确指向，为 undefined。默认就是非严格模式。\n\n3)作为构造函数调用\n")])])]),e("pre",[e("code",[t._v("function test(){\n    this.a = 1;\n};\nvar test2 = new test();\nalert(test2.a);//结果为：1\n")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("这里this指向的是构造的新对象，也就是 test2，所以test2也有了属性a并等于1。\n\n4)apply()、call() 调用\n\n")])])]),e("pre",[e("code",[t._v("var a = 0,\n    test1 = {\n        a:1,\n        fun:function(){\n            alert(this.a);\n        }\n    },\n    test2 = {\n        a:2\n    };\ntest1.fun();//结果为：1\ntest1.fun.call(test2);//结果为：2\ntest1.fun.call();//结果为：0\n")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\n这里的三次调用，this分别指向test1、test2和window。第一种前面已经提到了，第二种是通过call或者apply方法使fun中原本指向test1的this变成了指向test2（即call、apply方法的第一个参数）。第三种情况属于第一个参数为空（好像为undefined时也会指向window）时，会默认指向window，..call() =》 ..call(window)。\n\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);