(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{240:function(t,e,n){"use strict";n.r(e);var s=n(0),i=Object(s.a)({},(function(){var t=this.$createElement,e=this._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h3",{attrs:{id:"vuex简单版学习"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuex简单版学习"}},[this._v("#")]),this._v(" vuex简单版学习")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let Vue;\nclass Store {\n  constructor(options) {\n    //实现data的双向绑定\n    this.state = new Vue({\n      data: options.state\n    });\n    this.mutations = options.mutations;\n    this.actions = options.actions;\n    options.getters && this.handleGetters(options.getters);\n  }\n  commit = (type, arg) => {\n    this.mutations[type](this.state, arg);\n  };\n\n  dispatch(type, arg) {\n    this.actions[type](\n      {\n        state: this.state,\n        commit: this.commit\n      },\n      arg\n    );\n  }\n  handleGetters(getters) {\n    this.getters = {}; // 定义this.getters\n    // 遍历getters选项，为this.getters定义property // 属性名就是选项中的key，只需定义get函数保证其只读性\n    Object.keys(getters).forEach(key => {\n      // 这样这些属性都是只读的\n      Object.defineProperty(this.getters, key, {\n        get: () => {\n          // 注意依然是箭头函数\n          return getters[key](this.state);\n        }\n      });\n    });\n  }\n}\nfunction install(_Vue) {\n  Vue = _Vue;\n  Vue.mixin({\n    // 生命周期\n    beforeCreate() {\n      // 获取new Vue里的store\n      Vue.prototype.$store = this.$options.store;\n    }\n  });\n}\nexport default {\n  Store,\n  install\n};\n\n")])])])])}),[],!1,null,null,null);e.default=i.exports}}]);