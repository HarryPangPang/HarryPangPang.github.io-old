(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{224:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("我们在日常开发中经常使用函数，聪明的你肯定已经用的炉火纯青了。"),s("code",[t._v("function doStuff（）{}")]),t._v("和"),s("code",[t._v("（）=> {}")]),t._v("是我们整天输入的字符。但它们有何不同，为什么使用另一个呢？")]),t._v(" "),s("p",[t._v("*"),s("strong",[t._v("注：我们这里用的例子都是JavaScript")])]),t._v(" "),s("h3",{attrs:{id:"第一个不同：名称"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一个不同：名称"}},[t._v("#")]),t._v(" 第一个不同：名称")]),t._v(" "),s("p",[t._v("当你用一个名称创建函数时，这是一个函数声明。在函数表达式中可以省略该名称，使该函数“匿名”。")]),t._v(" "),s("h4",{attrs:{id:"函数声明："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数声明："}},[t._v("#")]),t._v(" 函数声明：")]),t._v(" "),s("p",[s("code",[t._v("function doStuff() {};")])]),t._v(" "),s("h4",{attrs:{id:"函数函数表达式："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数函数表达式："}},[t._v("#")]),t._v(" 函数函数表达式：")]),t._v(" "),s("p",[s("code",[t._v("const doStuff = function() {}")])]),t._v(" "),s("p",[t._v("日常中我们经常使用ES6创建函数表达式")]),t._v(" "),s("p",[s("code",[t._v("const doStuff = ()={}")])]),t._v(" "),s("h3",{attrs:{id:"第二个不同：提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二个不同：提升"}},[t._v("#")]),t._v(" 第二个不同：提升")]),t._v(" "),s("p",[t._v("提升是指函数和变量的提升，变量声明和函数声明提升至当前作用域的顶端，然后进行接下来的处理。")]),t._v(" "),s("h4",{attrs:{id:"函数声明会被提升但函数表达式不会。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数声明会被提升但函数表达式不会。"}},[t._v("#")]),t._v(" 函数声明会被提升但函数表达式不会。")]),t._v(" "),s("p",[t._v("我们可以通过例子来加深理解：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//函数声明\ndoStuff();\nfunction doStuff() { console.log('haha')};\n")])])]),s("p",[t._v("结果：\n"),s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/5/10/16aa030f3dd7cd09?w=361&h=103&f=png&s=5972",alt:""}}),t._v("\n看出来没有任何问题。")]),t._v(" "),s("p",[t._v("看下一个例子")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//函数表达式\ndoStuff();\nconst doStuff = () => {console.log('haha')};\n")])])]),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/5/10/16aa0341887f5f31?w=439&h=122&f=png&s=9366",alt:""}})]),t._v(" "),s("p",[t._v("看，这就报错了。")]),t._v(" "),s("p",[t._v("函数表达式实际解析的过程是这样的：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const doStuff;\ndoStuff();\ndoStuff = () => {console.log('haha')};\n")])])]),s("p",[s("em",[s("strong",[t._v("注：函数声明提升的优先级比变量提升高。")])])]),t._v(" "),s("h4",{attrs:{id:"使用函数表达式的情况："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用函数表达式的情况："}},[t._v("#")]),t._v(" 使用函数表达式的情况：")]),t._v(" "),s("p",[t._v("通过上面两个例子，看起来函数声明在提升方面比函数表达式有用的多。但是在他们两个之间选择的时候应该如何抉择呢？")]),t._v(" "),s("p",[t._v("调用函数表达式可以避免污染全局环境，因为你不知道你的程序有多少不同的函数，如果你使用函数表达式可能就会覆盖了别人的函数，采用函数表达式，就会避免这些问题。")]),t._v(" "),s("h4",{attrs:{id:"立即执行函数（iife）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#立即执行函数（iife）"}},[t._v("#")]),t._v(" 立即执行函数（IIFE）")]),t._v(" "),s("p",[t._v("IIFE - 立即调用函数表达式 - 就是字面意思。在创建函数后立即调用函数，使用IIFE，如下所示：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("(function() => {})()\n//或者\n(() => {})()\n")])])]),s("h4",{attrs:{id:"回调（callback）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回调（callback）"}},[t._v("#")]),t._v(" 回调（callback）")]),t._v(" "),s("p",[t._v("传递给另一个函数的函数通常在JavaScript中称为“回调”。，如下所示：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function mapAction(item) {\n  // do stuff to an item\n}\narray.map(mapAction)\n")])])]),s("p",[t._v("这里的问题是mapAction可用于整个应用程序- 其实没有必要。如果该回调是一个函数表达式，它在函数外就不可用了：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("array.map(item => { //do stuff to an item })\n//或者\nconst mapAction = function(item) {\n  // do stuff to an item\n}\narray.map(mapAction)\n")])])]),s("p",[t._v("虽然"),s("code",[t._v("mapAction")]),t._v("函数只有在他初始化之后才能使用")]),t._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("简而言之，如果要在全局范围内创建函数并在整个代码中使用它，请使用函数声明。")]),t._v(" "),s("p",[t._v("使用函数表达式来限制函数的可用位置，保持全局环境的整洁干净。\n————————————————————————————————————————————————")]),t._v(" "),s("p",[t._v("放学别走！长按二维码关注 【技术人生路】，无偿免费获取前端学习进阶资料，培训实战视频，就业指导等众多福利哦。我相信我们都是爱学习爱进步的呀！")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/5/10/16aa05e97ba82933?w=258&h=258&f=jpeg&s=28158",alt:""}})])])}),[],!1,null,null,null);a.default=n.exports}}]);