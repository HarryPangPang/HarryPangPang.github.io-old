(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{218:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("什么是跨域？\n概念：只要协议、域名、端口有任何一个不同，都被当作是不同的域。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("比如下面四个，都会存在跨域的问题\nhttps://www.baidu.com:8080\nhttp://www.baidu.com:8080\nhttps://www.m.baidu.com:8080\nhttps://www.m.baidu.com:4000\n")])])]),s("h4",{attrs:{id:"如何解决跨域问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何解决跨域问题"}},[t._v("#")]),t._v(" 如何解决跨域问题")]),t._v(" "),s("h6",{attrs:{id:"_1-jsonp："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-jsonp："}},[t._v("#")]),t._v(" 1.JSONP：")]),t._v(" "),s("blockquote",[s("p",[t._v("原理是：动态插入script标签，通过script标签引入一个js文件，这个js文件载入成功后会执行我们在url参数中指定的函数，并且会把我们需要的json数据作为参数传入。")])]),t._v(" "),s("p",[t._v("由于同源策略的限制，XmlHttpRequest只允许请求当前源（域名、协议、端口）的资源，为了实现跨域请求，可以通过script标签实现跨域请求，然后在服务端输出JSON数据并执行回调函数，从而解决了跨域的数据请求。\n优点是兼容性好，简单易用，支持浏览器与服务器双向通信。缺点是只支持GET请求。\nJSONP：json+padding（内填充），顾名思义，就是把JSON填充到一个盒子里")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<script>\n    function createJs(sUrl){\n        var oScript = document.createElement('script');\n        oScript.type = 'text/javascript';\n        oScript.src = sUrl;\n        document.getElementsByTagName('head')[0].appendChild(oScript);\n    }\n    createJs('jsonp.js');\n    box({\n       'name': 'test'\n    });\n    function box(json){\n        alert(json.name);\n    }\n<\/script>\n")])])]),s("h6",{attrs:{id:"_2-cors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-cors"}},[t._v("#")]),t._v(" 2.CORS")]),t._v(" "),s("p",[t._v("服务器端对于CORS的支持，主要就是通过设置Access-Control-Allow-Origin来进行的。\n如果浏览器检测到相应的设置，就可以允许Ajax进行跨域的访问。")]),t._v(" "),s("h6",{attrs:{id:"_3-通过修改document-domain来跨子域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-通过修改document-domain来跨子域"}},[t._v("#")]),t._v(" 3.通过修改DOCUMENT.DOMAIN来跨子域")]),t._v(" "),s("p",[t._v("将子域和主域的document.domain设为同一个主域.前提条件：这两个域名必须属于同一个基础域名!而且所用的协议，端口都要一致，\n否则无法利用document.domain进行跨域,主域相同的使用document.domain")]),t._v(" "),s("h6",{attrs:{id:"_4-使用window-name来进行跨域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-使用window-name来进行跨域"}},[t._v("#")]),t._v(" 4.使用WINDOW.NAME来进行跨域")]),t._v(" "),s("p",[t._v("window对象有个name属性，该属性有个特征：即在一个窗口(window)的生命周期内,窗口载入的所有的页面都是共享一个window.name的，\n每个页面对window.name都有读写的权限，window.name是持久存在一个窗口载入过的所有页面中的")]),t._v(" "),s("h6",{attrs:{id:"_5-使用html5中新引进的window-postmessage方法来跨域传送数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-使用html5中新引进的window-postmessage方法来跨域传送数据"}},[t._v("#")]),t._v(" 5.使用HTML5中新引进的WINDOW.POSTMESSAGE方法来跨域传送数据")]),t._v(" "),s("h6",{attrs:{id:"_6-还有flash、在服务器上设置代理页面等跨域方式。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-还有flash、在服务器上设置代理页面等跨域方式。"}},[t._v("#")]),t._v(" 6.还有FLASH、在服务器上设置代理页面等跨域方式。")])])}),[],!1,null,null,null);a.default=e.exports}}]);