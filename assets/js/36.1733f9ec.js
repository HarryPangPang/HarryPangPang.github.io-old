(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{237:function(e,n,t){"use strict";t.r(n);var i=t(0),a=Object(i.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("ol",[t("li",[e._v("浏览器缓存 主要指的是 htttp的缓存 ，即协议层的缓存")]),e._v(" "),t("li",[e._v("协议层的缓存 分为 强制缓存 和 对比缓存")])]),e._v(" "),t("p",[e._v("强制缓存：\n概念：只有当 缓存失效时 才会向服务器获取最新资源。\n方式： Expires  和  Cache-Control")]),e._v(" "),t("p",[e._v("1.Expires：\nExpires: Thu, 10 Nov 2017 08:45:11 GMT\n绝对时间，受客户端本地时间的影响，修改后会导致浏览器的缓存判断失效，而重新请求。并且 修改后会导致 客户端 与服务端时间不一致，使得缓存失效")]),e._v(" "),t("p",[e._v("2.Cache-Control：\n例：  Response Header：\nCache-Control：max-age=25454500\nmax-age：即最大有效时间，在上面的例子中我们可以看到\nno-cache：表示没有缓存，即告诉浏览器该资源并没有设置缓存\ns-maxage：同max-age，但是仅用于共享缓存，如CDN缓存\npublic：多用户共享缓存，默认设置\nprivate：不能够多用户共享，HTTP认证之后，字段会自动转换成private。\n相对时间，所以不会受客户端的 影响。可配置性强。")]),e._v(" "),t("p",[e._v("对比缓存：\n概念：简单来说就是 先去找缓存，然后获取缓存的标识，拿着标识去服务请求 确认该数据是否更新过，\n如果更新了 就返回最新的数据。否则 返回304，从缓存中获取数据。\n方式：Last-Modified和If-Modified-Since  和 Etag")]),e._v(" "),t("p",[e._v("Last-Modified：服务器告知客户端，资源最后一次被修改的时间\n例： Response Header：\nLast-Modified: Thu, 10 Nov 2015 08:45:11 GMT")]),e._v(" "),t("p",[e._v("If-Modified-Since：\n再次请求时，请求头中带有该字段，服务器会将If-Modified-Since的值与Last-Modified字段进行对比，\n如果相等，则表示未修改，响应304；\n反之，则表示修改了，响应200状态码，返回数据。")]),e._v(" "),t("p",[e._v("Etag：就是个hash值。每次随着数据资源返回，来回传递，进行识别对比，来判断是否返回304或者数据资源")])])}),[],!1,null,null,null);n.default=a.exports}}]);