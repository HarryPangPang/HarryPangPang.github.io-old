(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{241:function(t,e,n){"use strict";n.r(e);var o=n(0),r=Object(o.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h4",{attrs:{id:"vue-property-decorator使用指南"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-property-decorator使用指南"}},[t._v("#")]),t._v(" vue-property-decorator使用指南")]),t._v(" "),n("p",[t._v("vue-property-decorator是在你构建vue项目时选择class风格时使用的组件")]),t._v(" "),n("p",[t._v("一共有这么多属性：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("@Prop\n@PropSync\n@Model\n@Watch\n@Provide\n@Inject\n@ProvideReactive\n@InjectReactive\n@Emit\n@Ref\n@Component\n")])])]),n("p",[t._v("这里只介绍常见的几种使用方法")]),t._v(" "),n("ol",[n("li",[t._v("@Component\n@Component其实是vue-class-component插件提供的，但我们使用时，仍然可以采用下面的方法："),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("     <template>\n     <div class=\"home\">\n         <img alt=\"Vue logo\" src=\"../assets/logo.png\" />\n         <div>{{title}}</div>\n         <HelloWorld msg=\"Welcome to Your Vue.js App\" />\n     </div>\n     </template>\n\n     <script lang='ts'>\n     import { Component, Prop, Vue } from 'vue-property-decorator';\n     import HelloWorld from '@/uiFeatures/HelloWorld.vue';\n\n     // 组件注册\n     @Component({\n     components: {\n         HelloWorld,\n     },\n     })\n\n     export default class Home extends Vue {\n     // 这里是为了防止this.$toast报错，暂时还没想到别的处理方法\n     $toast:any\n\n     // 这里就是data属性\n     title:String = 'title'\n\n     created() {\n         this.$toast({\n         msg: 'This is Toast',\n         visable: true,\n         });\n     }\n     }\n     <\/script>\n\n")])])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);